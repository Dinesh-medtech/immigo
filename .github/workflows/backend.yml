name: Backend Pipeline

on:
  workflow_call:
    inputs:
      AWSDefaultRegion:
        required: false
        type: string
      EnvironmentName:
        required: false
        type: string
      ProjectName:
        required: false
        type: string
      parameters:
        required: false
        type: string
      SmallCaseEnvironment:
        required: true
        type: string

jobs:
  Deploy_BackEnd:
    runs-on: ubuntu-latest
    environment: "Development"
    env:
      AWS_OIDC_ROLE_ARN_NP: "${{ secrets.AWS_OIDC_ROLE_ARN_NP }}"
      AWS_ACCOUNT_NUMBER_NP: "${{ secrets.AWS_ACCOUNT_NUMBER_NP }}"
      SERVERLESS_ACCESS_KEY: "${{ secrets.SERVERLESS_ACCESS_KEY }}"
      AWS_DEFAULT_REGION: ${{ inputs.AWSDefaultRegion }}
      ENV: ${{ inputs.EnvironmentName }}
      SMALLCASEENV: ${{ inputs.SmallCaseEnvironment }}
      PROJECT_NAME: ${{ inputs.ProjectName }}
      PARAMETERS: ${{ inputs.parameters }}
      AWS_ACCESS_KEY_ID: "${{ secrets.DEV_AWS_ACCESS_KEY_ID }}"
      AWS_SECRET_ACCESS_KEY: "${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}"
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Python for SAM CLI
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Dependencies
        run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest pytest-cov
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE_ARN_NP }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-session-name: "GitHubActions"

      - name: Serverless APIs Deployment
        uses: serverless/github-action@v3.2
        with:
          args: |
            cd ./packages/backend
            npm install
            npm install --save-dev serverless-python-requirements@latest
            serverless plugin install -n serverless-python-requirements
            pip install -r requirements.txt
            serverless deploy --stage ${{env.SMALLCASEENV}} --param="EnvironmentName=${{ env.ENV }}"
